@model UI.ViewModels.ClientCreateUpdateViewModel

@using (@Ajax.BeginForm("CreateUpdate", "Client", null, new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "clients-container", OnBegin = "hideModal" }, new { id = "frm-client-create-update", @class = "form-horizontal", autocomplete = "off" }))
{
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
            &times;
        </button>
        <h3>
            @Html.Raw(Model.Id > 0 ? "Edit Client" :  "Add Client")
        </h3>
    </div>
    
    <div class="modal-body">
        
        @Html.ValidationSummary("Oops! The record was not saved. Please see the following errors:")
        
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.UserId)
        
        <div class="control-group">
            @Html.LabelFor(m => m.CompanyName, new {@class = "control-label"})
            <div class="controls">
                @Html.TextBoxFor(m => m.CompanyName)
                @Html.ValidationMessageFor(m => m.CompanyName, "*")
            </div>
        </div>
        
        <div class="control-group">
            @Html.LabelFor(m => m.Email, new {@class = "control-label"})
            <div class="controls">
                @Html.TextBoxFor(m => m.Email)
                @Html.ValidationMessageFor(m => m.Email, "*")
            </div>
        </div>
        
        <div class="control-group">
            @Html.LabelFor(m => m.Tel1, new {@class = "control-label"})
            <div class="controls">
                @Html.TextBoxFor(m => m.Tel1)
                @Html.ValidationMessageFor(m => m.Tel1, "*")
            </div>
        </div>
        
        <div class="control-group">
            @Html.LabelFor(m => m.Tel2, new {@class = "control-label"})
            <div class="controls">
                @Html.TextBoxFor(m => m.Tel2)
                @Html.ValidationMessageFor(m => m.Tel2, "*")
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(m => m.ClientTypeId, new {@class = "control-label"})
            <div class="controls">
                @Html.DropDownListFor(m => m.ClientTypeId, new SelectList(Model.ClientTypes,"Id", "Name"), new {@class = "input-large"})
            </div>
        </div>
        
    </div>
    
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal" aria-hidden="true">Cancel</button>
        <input type="submit" value="Save" class="btn btn-primary" />
    </div>
}
